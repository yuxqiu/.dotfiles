#!/bin/bash

# Set PATH explicitly for Sway compatibility
export PATH="$PATH:/usr/local/bin:/usr/bin:/bin:/home/$USER/.local/bin"

# File to store original microphone state
MIC_STATE_FILE="/tmp/nerd-dictation-mic-state"

# Function to get default microphone source
get_default_mic() {
    pactl get-default-source
    if [ $? -ne 0 ]; then
        notify-send "nerd-dictation" "Failed to get default microphone"
        exit 1
    fi
}

# Function to check if microphone is muted
is_mic_muted() {
    local mic_source="$1"
    pactl get-source-mute "$mic_source" | grep -q "Mute: yes"
    return $?
}

# Function to unmute microphone
unmute_mic() {
    local mic_source="$1"
    pactl set-source-mute "$mic_source" 0
    if [ $? -ne 0 ]; then
        notify-send "nerd-dictation" "Failed to unmute microphone"
        exit 1
    fi
}

# Function to restore microphone state
restore_mic_state() {
    local mic_source="$1"
    if [ -f "$MIC_STATE_FILE" ]; then
        local was_muted
        was_muted=$(cat "$MIC_STATE_FILE")
        if [ "$was_muted" = "yes" ]; then
            pactl set-source-mute "$mic_source" 1
            if [ $? -ne 0 ]; then
                notify-send "nerd-dictation" "Failed to restore microphone mute state"
                exit 1
            fi
        fi
        rm -f "$MIC_STATE_FILE"
    fi
}

# Get default microphone source
mic_source=$(get_default_mic)

# Check if nerd-dictation is running
if pgrep -f "nerd-dictation begin" > /dev/null; then
    # Stop nerd-dictation
    nerd-dictation end
    if [ $? -ne 0 ]; then
        notify-send "nerd-dictation" "Failed to terminate dictation"
        echo "Error: Failed to terminate nerd-dictation with exit status $?"
        exit 1
    fi

    # Restore microphone state
    restore_mic_state "$mic_source"
else
    # Check microphone state
    if is_mic_muted "$mic_source"; then
        echo "yes" > "$MIC_STATE_FILE"
        unmute_mic "$mic_source"
    else
        echo "no" > "$MIC_STATE_FILE"
    fi

    # Start nerd-dictation
    nerd-dictation begin --simulate-input-tool=DOTOOL &
    if [ $? -ne 0 ]; then
        notify-send "nerd-dictation" "Failed to start dictation"
        # Restore microphone state on failure
        restore_mic_state "$mic_source"
        exit 1
    fi
fi

exit 0
